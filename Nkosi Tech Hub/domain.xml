<?xml version="1.0" encoding="UTF-8"?>
<domain application-root="${com.sun.aas.instanceRoot}/applications" version="492" log-root="${com.sun.aas.instanceRoot}/logs">
  <hazelcast-runtime-configuration />
  <security-configurations>
    <authentication-service default="true" name="adminAuth" use-password-credential="true">
      <security-provider provider-name="adminSpc" name="spcrealm" type="LoginModule">
        <login-module-config module-class="com.sun.enterprise.admin.util.AdminLoginModule" control-flag="sufficient" name="adminSpecialLM">
          <property name="config" value="server-config" />
          <property name="auth-realm" value="admin-realm" />
        </login-module-config>
      </security-provider>
      <security-provider provider-name="adminFile" name="filerealm" type="LoginModule">
        <login-module-config module-class="com.sun.enterprise.security.auth.login.FileLoginModule" control-flag="sufficient" name="adminFileLM">
          <property name="config" value="server-config" />
          <property name="auth-realm" value="admin-realm" />
        </login-module-config>
      </security-provider>
    </authentication-service>
    <authorization-service default="true" name="authorizationService">
      <security-provider provider-name="simpleAuthorizationProvider" name="simpleAuthorization" type="Simple">
        <authorization-provider-config name="simpleAuthorizationProviderConfig" support-policy-deploy="false" />
      </security-provider>
    </authorization-service>
  </security-configurations>
  <monitoring-console-configuration />
  <system-applications>
    <application context-root="" object-type="system-admin" directory-deployed="true" name="__admingui" location="${com.sun.aas.installRootURI}/lib/install/applications/__admingui">
      <module name="__admingui">
        <engine sniffer="web" />
        <engine sniffer="security" />
      </module>
    </application>
  </system-applications>
  <resources>
    <jdbc-resource pool-name="__TimerPool" object-type="system-all" jndi-name="jdbc/__TimerPool" />
    <jdbc-resource pool-name="H2Pool" object-type="system-all" jndi-name="jdbc/__default" />
    <jdbc-connection-pool datasource-classname="org.h2.jdbcx.JdbcDataSource" name="__TimerPool" res-type="javax.sql.XADataSource">
      <property name="URL" value="jdbc:h2:${com.sun.aas.instanceRoot}/lib/databases/ejbtimer;AUTO_SERVER=TRUE" />
    </jdbc-connection-pool>
    <jdbc-connection-pool is-isolation-level-guaranteed="false" datasource-classname="org.h2.jdbcx.JdbcDataSource" name="H2Pool" res-type="javax.sql.DataSource">
      <property name="URL" value="jdbc:h2:${com.sun.aas.instanceRoot}/lib/databases/embedded_default;AUTO_SERVER=TRUE" />
    </jdbc-connection-pool>
    <managed-executor-service object-type="system-all" jndi-name="concurrent/kafkaExecutor" />
    <managed-executor-service object-type="system-all" jndi-name="concurrent/__defaultManagedExecutorService" />
    <managed-scheduled-executor-service object-type="system-all" jndi-name="concurrent/__defaultManagedScheduledExecutorService" />
    <connector-connection-pool resource-adapter-name="jmsra" max-pool-size="250" steady-pool-size="1" name="jms/__defaultConnectionFactory-Connection-Pool" connection-definition-name="javax.jms.ConnectionFactory" />
    <connector-resource pool-name="jms/__defaultConnectionFactory-Connection-Pool" object-type="system-all-req" jndi-name="jms/__defaultConnectionFactory" />
    <context-service object-type="system-all" jndi-name="concurrent/__defaultContextService" />
    <managed-thread-factory object-type="system-all" jndi-name="concurrent/__defaultManagedThreadFactory" />
    <jdbc-connection-pool max-pool-size="100" validate-atmost-once-period-in-seconds="5" connection-creation-retry-attempts="3" datasource-classname="oracle.jdbc.xa.client.OracleXADataSource" steady-pool-size="5" associate-with-thread="true" idle-timeout-in-seconds="600" name="Oracle_VoFaPl_View_Pool" statement-timeout-in-seconds="3600" wrap-jdbc-objects="false" lazy-connection-enlistment="true" res-type="javax.sql.XADataSource">
      <property name="user" value="VOFAPL_RES" />
      <property name="password" value="V13lPhanta$134A11" />
      <property name="url" value="jdbc:oracle:thin:@ldap://oraoid1.muc:389/vofai1lm,cn=OracleContext,dc=muc,dc=bmw,dc=de ldap://oraoid2.muc:389/vofai1lm,cn=OracleContext,dc=muc,dc=bmw,dc=de" />
    </jdbc-connection-pool>
    <jdbc-connection-pool datasource-classname="oracle.jdbc.xa.client.OracleXADataSource" name="Oracle_VoFaPl_Pool" res-type="javax.sql.XADataSource">
      <property name="password" value="6L-Mn#fCK8gmTa+a" />
      <property name="databaseName" value="vofai1m" />
      <property name="url" value="jdbc:oracle:thin:@ilpi2r2.bmwgroup.net:1645:vofai1m" />
      <property name="user" value="JAAF_ACCESS_RES" />
      <property name="portNumber" value="1645" />
      <property name="NetworkProtocol" value="tcp" />
    </jdbc-connection-pool>
    <jdbc-connection-pool steady-pool-size="10" datasource-classname="org.postgresql.ds.PGConnectionPoolDataSource" name="Postgres_PRMG_Pool" res-type="javax.sql.ConnectionPoolDataSource">
      <property name="password" value="bmw321" />
      <property name="url" value="jdbc:postgresql://localhost:5432/ApplicationDB" />
      <property name="user" value="prmg_res" />
    </jdbc-connection-pool>
    <jdbc-resource pool-name="Oracle_VoFaPl_Pool" jndi-name="jdbc/oracle_vofapl" />
    <jdbc-resource pool-name="Oracle_VoFaPl_View_Pool" jndi-name="jdbc/oracle_vofapl_view" />
    <jdbc-resource pool-name="Postgres_PRMG_Pool" jndi-name="jdbc/postgres_prmg" />
    <connector-connection-pool resource-adapter-name="jmsra" max-pool-size="250" steady-pool-size="1" name="jms/proflex/defaultConnectionFactory-Connection-Pool" connection-definition-name="javax.jms.QueueConnectionFactory" transaction-support="" />
    <connector-resource pool-name="jms/proflex/defaultConnectionFactory-Connection-Pool" jndi-name="jms/proflex/defaultConnectionFactory" />
    <admin-object-resource res-adapter="jmsra" res-type="javax.jms.Queue" jndi-name="jms/proflex/sendToScenarioManager">
      <property name="Name" value="RevMaSendToScenarioManager" />
    </admin-object-resource>
    <admin-object-resource res-adapter="jmsra" res-type="javax.jms.Queue" jndi-name="jms/proflex/scenarioManagerMessages">
      <property name="Name" value="RevMaReceiveFromScenarioManager" />
    </admin-object-resource>
    <admin-object-resource res-adapter="jmsra" res-type="javax.jms.Queue" jndi-name="jms/proflex/sendToVoFaPl">
      <property name="Name" value="SendToVofapl" />
    </admin-object-resource>
  </resources>
  <servers>
    <server config-ref="server-config" name="server">
      <application-ref ref="__admingui" virtual-servers="__asadmin" />
      <resource-ref ref="jdbc/__TimerPool" />
      <resource-ref ref="jdbc/__default" />
      <resource-ref ref="concurrent/__defaultManagedExecutorService" />
      <resource-ref ref="concurrent/__defaultManagedScheduledExecutorService" />
      <resource-ref ref="jms/__defaultConnectionFactory" />
      <resource-ref ref="concurrent/__defaultContextService" />
      <resource-ref ref="concurrent/__defaultManagedThreadFactory" />
      <resource-ref ref="jdbc/oracle_vofapl_view" />
      <resource-ref ref="jdbc/oracle_vofapl" />
      <resource-ref ref="jdbc/postgres_prmg" />
      <resource-ref ref="jms/proflex/defaultConnectionFactory" />
      <resource-ref ref="jms/proflex/sendToScenarioManager" />
      <resource-ref ref="jms/proflex/scenarioManagerMessages" />
      <resource-ref ref="jms/proflex/sendToVoFaPl" />
      <resource-ref ref="jdbc/oracle_semaphore" />
      <resource-ref ref="concurrent/kafkaExecutor" />
    </server>
  </servers>
  <nodes>
    <node name="localhost-domain1" install-dir="${com.sun.aas.productRoot}" type="CONFIG" node-host="localhost" />
  </nodes>
  <configs>
    <config name="server-config">
      <system-property name="com.bmw.ms.favourites" value="https://favorites-psvp-ms.app.si.vx.eu-central-1.aws.cloud.bmw" />
      <system-property name="com.bmw.prmg.mdpr.host.url" value="https://mdpr-mdpr.app.si.vx.eu-central-1.aws.cloud.bmw" />
      <system-property name="com.bmw.prmg.mdgs.host.url" value="https://mdgs.app.sit.a1.proflex.eu-central-1.aws.cloud.bmw" />
      <system-property name="com.bmw.prmg.vofapl.host.url" value="https://vofapl-int-403.bmwgroup.net" />
      <system-property name="com.bmw.prmg.mdpc.host.url" value="https://mdpc-mdpc.app.si.vx.eu-central-1.aws.cloud.bmw" />
      <system-property name="com.bmw.ms.volumes" value="http://localhost:8088" />
      <system-property name="com.bmw.ms.workflow.host.url" value="https://workflow-psvp-ms.app.si.vx.eu-central-1.aws.cloud.bmw" />
      <system-property name="JMS_PROVIDER_PORT" description="Port Number that JMS Service will listen for remote clients connection." value="7676" />
      <system-property name="com.bmw.proflex.flexapp.vofapl.jwt.authorization.secret" value="4T-OPk9K4DJV5igzSKSLAh8M4HujUBXx_vr" />
      <system-property name="com.bmw.proflex.flexapp.prmg.jwt.clientToken" value="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJRUVBSTUcwIiwiZXhwIjoxNzA2NzI1ODAwfQ.sps_n7zj1RHSOl0apnUfEjhezDxZ3jCy62Dtd3qGSXU" />
      <system-property name="com.bmw.proflex.flexapp.prmg.jwt.clientTokenForMDPC" value="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJRUVBSTUcwIiwiZXhwIjoxOTI0ODk4NDAwfQ.LGHXU2sA_fJ9cVWLOTwcQeFIcBfECKKagjlmCDVmBxs" />
      <system-property name="com.bmw.proflex.flexapp.prmg.jwt.ms.secret" value="pbB&lt;jZs)V64akr$?{c0zr=={c9-}7POL" />
      <system-property name="BMW-MS-FAVOURITES" value="http://localhost:8090" />
      <system-property name="BMW-MS-USER" value="http://localhost:8095" />
      <system-property name="com.bmw.prmg.mdsc.host.url" value="https://mdsc.app.sit.a1.proflex.eu-central-1.aws.cloud.bmw/mdsc/api" />
      <system-property name="com.bmw.prmg.oauth2.host.url" value="https://auth-i.bmwgroup.net/auth/oauth2/realms/root/realms/machine2machine/access_token" />
      <system-property name="com.bmw.prmg.oauth2.client.id" value="a13ceb8e-7c52-4142-ab3e-df67550a4b7d" />
      <system-property name="com.bmw.prmg.oauth2.secret" value="10wrqLJ1Jw7grtBYYxggx7PIEaodrsYyLeob3P27" />
      <system-property name="com.bmw.proflex.flexapp.prmg.jwt.ms.secret" value="pbB&lt;jZs)V64akr$?{c0zr=={c9-}7POL" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.bootstrapServers" value="localhost:9093" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.saslJaas.username" value="prmg_rw" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.saslJaas.password" value="bmw123" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.sslTruststoreLocation" value="C:\Users\QXZ4EE9\DockerImages\prmg-kafka\security\certs\client\docker.kafka.client.truststore.jks" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.sslTruststorePassword" value="changeit" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.producer.topic.volumeMessage" value="bmw.prmg.SalesVolumeVehicle.v1.local" />
      <system-property name="com.bmw.proflex.kafka.topic.consumer" value="required-to-suppress-error" />
      <system-property name="com.bmw.proflex.kafka.confluent.topic.consumer" value="bmw.szma.ScenarioManagerMessage.v1.local.publish" />
      <system-property name="com.bmw.proflex.kafka.confluent.topic.producer" value="bmw.szma.ScenarioManagerMessage.v1.local.response" />
      <system-property name="com.bmw.proflex.kafka.bootstrap.confluentHost" value="localhost:9093" />
      <system-property name="com.bmw.proflex.kafka.clientId" value="bmw.prmg.clientId" />
      <system-property name="com.bmw.proflex.kafka.confluent.groupId" value="bmw.prmg.groupId" />
      <system-property name="com.bmw.proflex.kafka.receiveFromComponents" value="szma-kafka-clientId" />
      <system-property name="com.bmw.proflex.kafka.pollTimeoutAsDuration" value="PT1M" />
      <system-property name="com.bmw.proflex.kafka.sslEnabled" value="true" />
      <system-property name="com.bmw.proflex.kafka.sslTrustStoreLoc2" value="C:\Users\QXZ4EE9\DockerImages\prmg-kafka\security\certs\client\docker.kafka.client.truststore.jks" />
      <system-property name="com.bmw.proflex.kafka.saslPW" value="bmw123" />
      <system-property name="com.bmw.proflex.kafka.saslUsername" value="prmg_rw" />
      <system-property name="com.bmw.proflex.kafka.confluentEnabled" value="true" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.bootstrapServers" value="localhost:9093" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.clientId" value="bmw.prmg" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.groupId" value="bmw.prmg" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.securityProtocol" value="SASL_SSL" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.saslMechanism" value="PLAIN" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.saslJaas.username" value="prmg_rw" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.saslJaas.password" value="bmw123" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.sslTruststoreType" value="JKS" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.sslTruststoreLocation" value="C:\Users\QXZ4EE9\DockerImages\prmg-kafka\security\certs\client\docker.kafka.client.truststore.jks" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.sslTruststorePassword" value="changeit" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.consumer.topic.scheduledTask" value="bmw.prmg.ScheduledTask.v1.local" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.producer.topic.volumeMessage" value="bmw.prmg.SalesVolumeVehicle.v1.local" />
      <system-property name="com.bmw.proflex.flexapp.prmg.kafka.producer.topic.ppoLogEvent" value="bmw.prmg.PPOLogEvent.v1.local" />
      <payara-executor-service-configuration />
      <http-service>
        <access-log />
        <virtual-server network-listeners="http-listener-1,http-listener-2" id="server" />
        <virtual-server network-listeners="admin-listener" id="__asadmin" />
      </http-service>
      <iiop-service>
        <orb use-thread-pool-ids="thread-pool-1" />
        <iiop-listener address="0.0.0.0" port="3700" lazy-init="true" id="orb-listener-1" />
        <ssl />
        <iiop-listener address="0.0.0.0" port="3820" id="SSL" security-enabled="true">
          <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" />
        </iiop-listener>
        <iiop-listener address="0.0.0.0" port="3920" id="SSL_MUTUALAUTH" security-enabled="true">
          <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" client-auth-enabled="true" />
        </iiop-listener>
      </iiop-service>
      <admin-service system-jmx-connector-name="system" type="das-and-server">
        <jmx-connector address="0.0.0.0" port="8686" name="system" auth-realm-name="admin-realm" security-enabled="false" />
        <property name="adminConsoleContextRoot" value="/admin" />
        <property name="adminConsoleDownloadLocation" value="${com.sun.aas.installRoot}/lib/install/applications/admingui.war" />
        <property name="ipsRoot" value="${com.sun.aas.installRoot}/.." />
        <das-config />
      </admin-service>
      <connector-service />
      <transaction-service tx-log-dir="${com.sun.aas.instanceRoot}/logs" />
      <asadmin-recorder-configuration />
      <request-tracing-service-configuration>
        <notifier>log-notifier</notifier>
      </request-tracing-service-configuration>
      <notification-service-configuration enabled="true">
        <log-notifier-configuration enabled="true" />
        <jms-notifier-configuration />
        <eventbus-notifier-configuration />
        <cdi-eventbus-notifier-configuration />
      </notification-service-configuration>
      <hazelcast-config-specific-configuration />
      <monitoring-service-configuration>
        <notifier>log-notifier</notifier>
      </monitoring-service-configuration>
      <microprofile-metrics-configuration />
      <health-check-service-configuration>
        <notifier>log-notifier</notifier>
      </health-check-service-configuration>
      <admin-audit-configuration>
        <notifier>log-notifier</notifier>
      </admin-audit-configuration>
      <microprofile-config />
      <phone-home-runtime-configuration phone-home-id="9853e21c-e851-4adb-80db-12f8d92bd505" />
      <batch-runtime-configuration />
      <microprofile-healthcheck-configuration />
      <stuck-threads-checker />
      <amx-configuration />
      <ejb-invoker-configuration />
      <microprofile-fault-tolerance-configuration />
      <rest-monitoring-configuration />
      <jms-service default-jms-host="default_JMS_host" type="EMBEDDED">
        <jms-host port="${JMS_PROVIDER_PORT}" name="default_JMS_host" host="localhost" />
      </jms-service>
      <web-container>
        <session-config>
          <session-manager>
            <store-properties />
            <manager-properties />
          </session-manager>
          <session-properties />
        </session-config>
      </web-container>
      <microprofile-openapi-configuration />
      <ejb-container>
        <ejb-timer-service />
      </ejb-container>
      <rest-config />
      <environment-warning-configuration />
      <cdi-service />
      <jdbc-config-source-configuration />
      <diagnostic-service />
      <security-service>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="admin-realm">
          <property name="file" value="${com.sun.aas.instanceRoot}/config/admin-keyfile" />
          <property name="jaas-context" value="fileRealm" />
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="file">
          <property name="file" value="${com.sun.aas.instanceRoot}/config/keyfile" />
          <property name="jaas-context" value="fileRealm" />
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" name="certificate">
          <property name="certificate-validation" value="true" />
        </auth-realm>
        <jacc-provider policy-provider="com.sun.enterprise.security.provider.PolicyWrapper" name="default" policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl">
          <property name="repository" value="${com.sun.aas.instanceRoot}/generated/policy" />
        </jacc-provider>
        <jacc-provider policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider" name="simple" policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory" />
        <audit-module classname="com.sun.enterprise.security.ee.Audit" name="default">
          <property name="auditOn" value="false" />
        </audit-module>
        <message-security-config auth-layer="SOAP">
          <provider-config provider-type="client" provider-id="XWS_ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property name="encryption.key.alias" value="s1as" />
            <property name="signature.key.alias" value="s1as" />
            <property name="dynamic.username.password" value="false" />
            <property name="debug" value="false" />
          </provider-config>
          <provider-config provider-type="client" provider-id="ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property name="encryption.key.alias" value="s1as" />
            <property name="signature.key.alias" value="s1as" />
            <property name="dynamic.username.password" value="false" />
            <property name="debug" value="false" />
            <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml" />
          </provider-config>
          <provider-config provider-type="server" provider-id="XWS_ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property name="encryption.key.alias" value="s1as" />
            <property name="signature.key.alias" value="s1as" />
            <property name="debug" value="false" />
          </provider-config>
          <provider-config provider-type="server" provider-id="ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property name="encryption.key.alias" value="s1as" />
            <property name="signature.key.alias" value="s1as" />
            <property name="debug" value="false" />
            <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml" />
          </provider-config>
        </message-security-config>
        <message-security-config auth-layer="HttpServlet">
          <provider-config provider-type="server" provider-id="GFConsoleAuthModule" class-name="org.glassfish.admingui.common.security.AdminConsoleAuthModule">
            <request-policy auth-source="sender" />
            <response-policy />
            <property name="loginPage" value="/login.jsf" />
            <property name="loginErrorPage" value="/loginError.jsf" />
          </provider-config>
        </message-security-config>
        <property name="default-digest-algorithm" value="SHA-256" />
      </security-service>
      <java-config classpath-suffix="" debug-options="-agentlib:jdwp=transport=dt_socket,address=9009,server=n,suspend=y" java-home="C:\Program Files\Java\jdk-17.0.8" system-classpath="">
        <jvm-options>[9|]--add-opens=java.base/jdk.internal.loader=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/java.lang=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/java.net=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/java.nio=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/java.util=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/sun.nio.ch=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.management/sun.management=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/sun.net.www.protocol.jrt=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/sun.net.www.protocol.jar=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.naming/javax.naming.spi=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED</jvm-options>
        <jvm-options>[17|]--add-exports=java.base/sun.net.www=ALL-UNNAMED</jvm-options>
        <jvm-options>[17|]--add-exports=java.base/sun.security.util=ALL-UNNAMED</jvm-options>
        <jvm-options>[17|]--add-opens=java.base/java.lang.invoke=ALL-UNNAMED</jvm-options>
        <jvm-options>[17|]--add-opens=java.desktop/java.beans=ALL-UNNAMED</jvm-options>
        <jvm-options>-Djavax.management.builder.initial=com.sun.enterprise.v3.admin.AppServerMBeanServerBuilder</jvm-options>
        <jvm-options>-Djdk.tls.rejectClientInitiatedRenegotiation=true</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.maxconn=1</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
        <jvm-options>-Dorg.glassfish.additionalOSGiBundlesToStart=org.apache.felix.shell,org.apache.felix.gogo.runtime,org.apache.felix.gogo.shell,org.apache.felix.gogo.command,org.apache.felix.shell.remote,org.apache.felix.fileinstall</jvm-options>
        <jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf</jvm-options>
        <jvm-options>-Dfelix.fileinstall.disableConfigSave=false</jvm-options>
        <jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy</jvm-options>
        <jvm-options>-Djavax.xml.accessExternalSchema=all</jvm-options>
        <jvm-options>-Dfelix.fileinstall.log.level=2</jvm-options>
        <jvm-options>[9|]--add-opens=java.logging/java.util.logging=ALL-UNNAMED</jvm-options>
        <jvm-options>-Dfelix.fileinstall.poll=5000</jvm-options>
        <jvm-options>[|8]-Djava.endorsed.dirs=${com.sun.aas.installRoot}/modules/endorsed${path.separator}${com.sun.aas.installRoot}/lib/endorsed</jvm-options>
        <jvm-options>-Djdbc.drivers=org.h2.Driver</jvm-options>
        <jvm-options>-Dfelix.fileinstall.dir=${com.sun.aas.installRoot}/modules/autostart/</jvm-options>
        <jvm-options>[1.8.0|1.8.0.120]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.6.jar</jvm-options>
        <jvm-options>[1.8.0.161|1.8.0.190]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.8.jar</jvm-options>
        <jvm-options>-Xmx8192M</jvm-options>
        <jvm-options>[Dynamic Code Evolution-11.0.10|]-XX:HotswapAgent=core</jvm-options>
        <jvm-options>-Dfelix.fileinstall.bundles.startTransient=true</jvm-options>
        <jvm-options>[1.8.0.251|]-Xbootclasspath/a:${com.sun.aas.installRoot}/lib/grizzly-npn-api.jar</jvm-options>
        <jvm-options>[9|]-Djdk.attach.allowAttachSelf=true</jvm-options>
        <jvm-options>-Dcom.ctc.wstx.returnNullForDefaultNamespace=true</jvm-options>
        <jvm-options>[Dynamic Code Evolution-11.0.10|]-Xlog:redefine+class*=info</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.ip=127.0.0.1</jvm-options>
        <jvm-options>-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks</jvm-options>
        <jvm-options>[9|]--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED</jvm-options>
        <jvm-options>-XX:NewRatio=2</jvm-options>
        <jvm-options>-Djdk.corba.allowOutputStreamSubclass=true</jvm-options>
        <jvm-options>[17|]--add-exports=jdk.naming.dns/com.sun.jndi.dns=ALL-UNNAMED</jvm-options>
        <jvm-options>-Dgosh.args=--nointeractive</jvm-options>
        <jvm-options>-server</jvm-options>
        <jvm-options>-Dfelix.fileinstall.bundles.new.start=true</jvm-options>
        <jvm-options>-Dorg.glassfish.grizzly.DEFAULT_MEMORY_MANAGER=org.glassfish.grizzly.memory.HeapMemoryManager</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.port=6666</jvm-options>
        <jvm-options>[1.8.0.121|1.8.0.160]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.7.jar</jvm-options>
        <jvm-options>-Djava.awt.headless=true</jvm-options>
        <jvm-options>[1.8.0.191|1.8.0.250]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.8.1.jar</jvm-options>
        <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
        <jvm-options>-Dcom.bmw.prmg.mdsc.host.url=https://mdsc.app.sit.a1.proflex.eu-central-1.aws.cloud.bmw/mdsc/api</jvm-options>
        <jvm-options>-Dcom.bmw.prmg.oauth2.host.url=https://auth-i.bmwgroup.net/auth/oauth2/realms/root/realms/machine2machine/access_token</jvm-options>
        <jvm-options>-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/keystore.jks</jvm-options>
        <jvm-options>-DANTLR_USE_DIRECT_CLASS_LOADING=true</jvm-options>
        <jvm-options>[Azul-1.8.0.222|1.8.0.260]-XX:+UseOpenJSSE</jvm-options>
        <jvm-options>[9|]--add-opens=java.naming/com.sun.jndi.ldap=ALL-UNNAMED</jvm-options>
        <jvm-options>-Dorg.glassfish.grizzly.nio.DefaultSelectorHandler.force-selector-spin-detection=true</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.security.httpsOutboundKeyAlias=s1as</jvm-options>
        <jvm-options>-Dorg.jboss.weld.serialization.beanIdentifierIndexOptimization=false</jvm-options>
        <jvm-options>[|8]-Djava.ext.dirs=${com.sun.aas.javaRoot}/lib/ext${path.separator}${com.sun.aas.javaRoot}/jre/lib/ext${path.separator}${com.sun.aas.instanceRoot}/lib/ext</jvm-options>
        <jvm-options>-Dcom.bmw.prmg.oauth2.client.id=a13ceb8e-7c52-4142-ab3e-df67550a4b7d</jvm-options>
        <jvm-options>-Xms1G</jvm-options>
        <jvm-options>-Dlogback.configurationFile=file:///${com.sun.aas.instanceRoot}/config/logback.xml</jvm-options>
      </java-config>
      <availability-service>
        <web-container-availability />
        <ejb-container-availability sfsb-store-pool-name="jdbc/hastore" />
      </availability-service>
      <network-config>
        <protocols>
          <protocol name="http-listener-1">
            <http compressable-mime-type="text/html,text/css,text/plain,text/javascript,application/javascript,application/json,image/svg+xml" compression-level="6" max-connections="250" compression="on" default-virtual-server="server">
              <file-cache />
            </http>
            <ssl />
          </protocol>
          <protocol name="http-listener-2" security-enabled="true">
            <http compressable-mime-type="text/html,text/css,text/plain,text/javascript,application/javascript,application/json,image/svg+xml" compression-level="6" max-connections="250" compression="on" default-virtual-server="server">
              <file-cache />
            </http>
            <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" />
          </protocol>
          <protocol name="admin-listener">
            <http encoded-slash-enabled="true" max-connections="250" default-virtual-server="__asadmin">
              <file-cache />
            </http>
          </protocol>
        </protocols>
        <network-listeners>
          <network-listener protocol="http-listener-1" port="8080" name="http-listener-1" thread-pool="http-thread-pool" transport="tcp" />
          <network-listener protocol="http-listener-2" port="8181" name="http-listener-2" thread-pool="http-thread-pool" transport="tcp" />
          <network-listener protocol="admin-listener" port="4848" name="admin-listener" thread-pool="admin-thread-pool" transport="tcp" />
        </network-listeners>
        <transports>
          <transport name="tcp" />
        </transports>
      </network-config>
      <thread-pools>
        <thread-pool name="admin-thread-pool" min-thread-pool-size="1" max-queue-size="256" max-thread-pool-size="15" />
        <thread-pool name="http-thread-pool" />
        <thread-pool name="thread-pool-1" max-thread-pool-size="200" />
      </thread-pools>
      <system-property name="org.glassfish.gmbal.no.multipleUpperBoundsException" value="true" />
      <group-management-service>
        <failure-detection />
      </group-management-service>
      <monitoring-service>
        <module-monitoring-levels />
      </monitoring-service>
    </config>
    <config name="default-config">
      <payara-executor-service-configuration />
      <http-service>
        <access-log />
        <virtual-server network-listeners="http-listener-1, http-listener-2" id="server">
          <property name="default-web-xml" value="${com.sun.aas.instanceRoot}/config/default-web.xml" />
        </virtual-server>
        <virtual-server network-listeners="admin-listener" id="__asadmin" />
      </http-service>
      <iiop-service>
        <orb use-thread-pool-ids="thread-pool-1" />
        <iiop-listener address="0.0.0.0" port="${IIOP_LISTENER_PORT}" id="orb-listener-1" />
        <ssl />
        <iiop-listener address="0.0.0.0" port="${IIOP_SSL_LISTENER_PORT}" id="SSL" security-enabled="true">
          <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" />
        </iiop-listener>
        <iiop-listener address="0.0.0.0" port="${IIOP_SSL_MUTUALAUTH_PORT}" id="SSL_MUTUALAUTH" security-enabled="true">
          <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" client-auth-enabled="true" />
        </iiop-listener>
      </iiop-service>
      <admin-service system-jmx-connector-name="system">
        <jmx-connector address="0.0.0.0" port="${JMX_SYSTEM_CONNECTOR_PORT}" name="system" auth-realm-name="admin-realm" security-enabled="false" />
        <property name="adminConsoleDownloadLocation" value="${com.sun.aas.installRoot}/lib/install/applications/admingui.war" />
        <das-config />
      </admin-service>
      <web-container>
        <session-config>
          <session-manager>
            <manager-properties />
            <store-properties />
          </session-manager>
          <session-properties />
        </session-config>
      </web-container>
      <ejb-container>
        <ejb-timer-service />
      </ejb-container>
      <mdb-container />
      <jms-service addresslist-behavior="priority" default-jms-host="default_JMS_host" type="EMBEDDED">
        <jms-host port="${JMS_PROVIDER_PORT}" host="localhost" name="default_JMS_host" />
      </jms-service>
      <log-service file="${com.sun.aas.instanceRoot}/logs/server.log" log-rotation-limit-in-bytes="2000000">
        <module-log-levels />
      </log-service>
      <security-service>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="admin-realm">
          <property name="file" value="${com.sun.aas.instanceRoot}/config/admin-keyfile" />
          <property name="jaas-context" value="fileRealm" />
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="file">
          <property name="file" value="${com.sun.aas.instanceRoot}/config/keyfile" />
          <property name="jaas-context" value="fileRealm" />
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="bmwRealm">
          <property name="file" value="${com.sun.aas.instanceRoot}/config/keyfile" />
          <property name="jaas-context" value="fileRealm" />
          <property name="assign-groups" value="AR_PRMG_Volume_READ,AR_PRMG_Volume_WRITE" />
        </auth-realm>
        <auth-realm classname="com.bmw.security.jaaf.wen.auth.GF4WenRealm" name="bmwRealm">
          <property name="config-file" value="${com.sun.aas.instanceRoot}/config/wen.properties" />
          <property name="jaas-context" value="wenRealm" />
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" name="certificate">
          <property name="certificate-validation" value="true" />
        </auth-realm>
        <jacc-provider policy-provider="com.sun.enterprise.security.provider.PolicyWrapper" name="default" policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl">
          <property name="repository" value="${com.sun.aas.instanceRoot}/generated/policy" />
        </jacc-provider>
        <jacc-provider policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider" name="simple" policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory" />
        <audit-module classname="com.sun.enterprise.security.ee.Audit" name="default">
          <property name="auditOn" value="false" />
        </audit-module>
        <message-security-config auth-layer="SOAP">
          <provider-config provider-type="client" provider-id="XWS_ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property name="encryption.key.alias" value="s1as" />
            <property name="signature.key.alias" value="s1as" />
            <property name="dynamic.username.password" value="false" />
            <property name="debug" value="false" />
          </provider-config>
          <provider-config provider-type="client" provider-id="ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property name="encryption.key.alias" value="s1as" />
            <property name="signature.key.alias" value="s1as" />
            <property name="dynamic.username.password" value="false" />
            <property name="debug" value="false" />
            <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml" />
          </provider-config>
          <provider-config provider-type="server" provider-id="XWS_ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property name="encryption.key.alias" value="s1as" />
            <property name="signature.key.alias" value="s1as" />
            <property name="debug" value="false" />
          </provider-config>
          <provider-config provider-type="server" provider-id="ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property name="encryption.key.alias" value="s1as" />
            <property name="signature.key.alias" value="s1as" />
            <property name="debug" value="false" />
            <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml" />
          </provider-config>
        </message-security-config>
      </security-service>
      <transaction-service automatic-recovery="true" tx-log-dir="${com.sun.aas.instanceRoot}/logs" />
      <request-tracing-service-configuration>
        <notifier>log-notifier</notifier>
      </request-tracing-service-configuration>
      <notification-service-configuration enabled="true">
        <log-notifier-configuration enabled="true" />
      </notification-service-configuration>
      <hazelcast-config-specific-configuration config-specific-data-grid-start-port="${HZ_LISTENER_PORT}" />
      <monitoring-service-configuration>
        <notifier>log-notifier</notifier>
      </monitoring-service-configuration>
      <microprofile-metrics-configuration />
      <health-check-service-configuration>
        <notifier>log-notifier</notifier>
      </health-check-service-configuration>
      <admin-audit-configuration>
        <notifier>log-notifier</notifier>
      </admin-audit-configuration>
      <batch-runtime-configuration />
      <microprofile-config />
      <amx-configuration />
      <diagnostic-service />
      <java-config classpath-suffix="" debug-options="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${JAVA_DEBUGGER_PORT}" system-classpath="">
        <jvm-options>-server</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/jdk.internal.loader=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/java.lang=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/java.net=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/java.nio=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/java.util=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/sun.nio.ch=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.management/sun.management=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/sun.net.www.protocol.jrt=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/sun.net.www.protocol.jar=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.naming/javax.naming.spi=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.logging/java.util.logging=ALL-UNNAMED</jvm-options>
        <jvm-options>[17|]--add-exports=java.base/sun.net.www=ALL-UNNAMED</jvm-options>
        <jvm-options>[17|]--add-exports=java.base/sun.security.util=ALL-UNNAMED</jvm-options>
        <jvm-options>[17|]--add-opens=java.base/java.lang.invoke=ALL-UNNAMED</jvm-options>
        <jvm-options>[17|]--add-opens=java.desktop/java.beans=ALL-UNNAMED</jvm-options>
        <jvm-options>[17|]--add-exports=jdk.naming.dns/com.sun.jndi.dns=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.naming/com.sun.jndi.ldap=ALL-UNNAMED</jvm-options>
        <jvm-options>-Xmx512m</jvm-options>
        <jvm-options>-XX:NewRatio=2</jvm-options>
        <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
        <jvm-options>-Djava.awt.headless=true</jvm-options>
        <jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf</jvm-options>
        <jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.security.httpsOutboundKeyAlias=s1as</jvm-options>
        <jvm-options>-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/keystore.jks</jvm-options>
        <jvm-options>-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks</jvm-options>
        <jvm-options>-Djdbc.drivers=org.h2.Driver</jvm-options>
        <jvm-options>-Djdk.corba.allowOutputStreamSubclass=true</jvm-options>
        <jvm-options>-Djdk.tls.rejectClientInitiatedRenegotiation=true</jvm-options>
        <jvm-options>-DANTLR_USE_DIRECT_CLASS_LOADING=true</jvm-options>
        <jvm-options>-Dorg.glassfish.additionalOSGiBundlesToStart=org.apache.felix.shell,org.apache.felix.gogo.runtime,org.apache.felix.gogo.shell,org.apache.felix.gogo.command,org.apache.felix.fileinstall</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.port=${OSGI_SHELL_TELNET_PORT}</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.maxconn=1</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.ip=127.0.0.1</jvm-options>
        <jvm-options>-Dgosh.args=--nointeractive</jvm-options>
        <jvm-options>-Dfelix.fileinstall.dir=${com.sun.aas.installRoot}/modules/autostart/</jvm-options>
        <jvm-options>-Dfelix.fileinstall.poll=5000</jvm-options>
        <jvm-options>-Dfelix.fileinstall.log.level=3</jvm-options>
        <jvm-options>-Dfelix.fileinstall.bundles.new.start=true</jvm-options>
        <jvm-options>-Dfelix.fileinstall.bundles.startTransient=true</jvm-options>
        <jvm-options>-Dfelix.fileinstall.disableConfigSave=false</jvm-options>
        <jvm-options>-Dorg.glassfish.grizzly.DEFAULT_MEMORY_MANAGER=org.glassfish.grizzly.memory.HeapMemoryManager</jvm-options>
        <jvm-options>-Dorg.glassfish.grizzly.nio.DefaultSelectorHandler.force-selector-spin-detection=true</jvm-options>
        <jvm-options>-Dorg.jboss.weld.serialization.beanIdentifierIndexOptimization=false</jvm-options>
        <jvm-options>[|8]-Djava.endorsed.dirs=${com.sun.aas.installRoot}/modules/endorsed${path.separator}${com.sun.aas.installRoot}/lib/endorsed</jvm-options>
        <jvm-options>[|8]-Djava.ext.dirs=${com.sun.aas.javaRoot}/lib/ext${path.separator}${com.sun.aas.javaRoot}/jre/lib/ext${path.separator}${com.sun.aas.instanceRoot}/lib/ext</jvm-options>
        <jvm-options>[1.8.0|1.8.0u120]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.6.jar</jvm-options>
        <jvm-options>[1.8.0u121|1.8.0u160]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.7.jar</jvm-options>
        <jvm-options>[1.8.0u161|1.8.0u190]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.8.jar</jvm-options>
        <jvm-options>[1.8.0u191|1.8.0u250]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.8.1.jar</jvm-options>
        <jvm-options>[1.8.0u251|]-Xbootclasspath/a:${com.sun.aas.installRoot}/lib/grizzly-npn-api.jar</jvm-options>
        <jvm-options>[Azul-1.8.0u222|1.8.0u260]-XX:+UseOpenJSSE</jvm-options>
        <jvm-options>[Dynamic Code Evolution-11.0.10|]-XX:HotswapAgent=core</jvm-options>
        <jvm-options>[Dynamic Code Evolution-11.0.10|]-Xlog:redefine+class*=info</jvm-options>
      </java-config>
      <availability-service>
        <web-container-availability />
        <ejb-container-availability sfsb-store-pool-name="jdbc/hastore" />
        <jms-availability />
      </availability-service>
      <network-config>
        <protocols>
          <protocol name="http-listener-1">
            <http default-virtual-server="server">
              <file-cache />
            </http>
            <ssl />
          </protocol>
          <protocol name="http-listener-2" security-enabled="true">
            <http default-virtual-server="server">
              <file-cache />
            </http>
            <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" />
          </protocol>
          <protocol name="admin-listener">
            <http max-connections="250" default-virtual-server="__asadmin">
              <file-cache />
            </http>
          </protocol>
          <protocol name="sec-admin-listener" security-enabled="true">
            <http encoded-slash-enabled="true" default-virtual-server="__asadmin">
              <file-cache />
            </http>
            <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" client-auth="want" cert-nickname="glassfish-instance" renegotiate-on-client-auth-want="false" />
          </protocol>
          <protocol name="admin-http-redirect">
            <http-redirect secure="true" />
          </protocol>
          <protocol name="pu-protocol">
            <port-unification>
              <protocol-finder protocol="sec-admin-listener" classname="org.glassfish.grizzly.config.portunif.HttpProtocolFinder" name="http-finder" />
              <protocol-finder protocol="admin-http-redirect" classname="org.glassfish.grizzly.config.portunif.HttpProtocolFinder" name="admin-http-redirect" />
            </port-unification>
          </protocol>
        </protocols>
        <network-listeners>
          <network-listener protocol="http-listener-1" port="${HTTP_LISTENER_PORT}" name="http-listener-1" thread-pool="http-thread-pool" transport="tcp" />
          <network-listener protocol="http-listener-2" port="${HTTP_SSL_LISTENER_PORT}" name="http-listener-2" thread-pool="http-thread-pool" transport="tcp" />
          <network-listener protocol="pu-protocol" port="${ASADMIN_LISTENER_PORT}" name="admin-listener" thread-pool="admin-thread-pool" transport="tcp" />
        </network-listeners>
        <transports>
          <transport name="tcp" />
        </transports>
      </network-config>
      <thread-pools>
        <thread-pool name="http-thread-pool" />
        <thread-pool name="thread-pool-1" min-thread-pool-size="2" max-thread-pool-size="200" />
        <thread-pool name="admin-thread-pool" min-thread-pool-size="1" max-queue-size="256" max-thread-pool-size="15" />
      </thread-pools>
      <group-management-service>
        <failure-detection />
      </group-management-service>
      <system-property name="JMS_PROVIDER_PORT" description="Port Number that JMS Service will listen for remote clients connection." value="27676" />
      <system-property name="ASADMIN_LISTENER_PORT" value="24848" />
      <system-property name="HTTP_LISTENER_PORT" value="28080" />
      <system-property name="HTTP_SSL_LISTENER_PORT" value="28181" />
      <system-property name="IIOP_LISTENER_PORT" value="23700" />
      <system-property name="IIOP_SSL_LISTENER_PORT" value="23820" />
      <system-property name="IIOP_SSL_MUTUALAUTH_PORT" value="23920" />
      <system-property name="JMX_SYSTEM_CONNECTOR_PORT" value="28686" />
      <system-property name="OSGI_SHELL_TELNET_PORT" value="26666" />
      <system-property name="JAVA_DEBUGGER_PORT" value="29009" />
      <system-property name="HZ_LISTENER_PORT" value="5900" />
      <system-property name="org.glassfish.gmbal.no.multipleUpperBoundsException" value="true" />
      <monitoring-service>
        <module-monitoring-levels />
      </monitoring-service>
    </config>
  </configs>
  <property name="administrative.domain.name" value="domain1" />
  <secure-admin special-admin-indicator="73389733-e4a3-44f2-b9cd-4de372474892">
    <secure-admin-principal dn="CN=localhost,OU=Payara,O=Payara Foundation,L=Great Malvern,ST=Worcestershire,C=UK" />
    <secure-admin-principal dn="CN=localhost-instance,OU=Payara,O=Payara Foundation,L=Great Malvern,ST=Worcestershire,C=UK" />
  </secure-admin>
  <deployment-groups />
  <clusters />
  <applications />
</domain>

